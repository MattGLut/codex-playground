name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t codex-playground:latest .
          docker save codex-playground:latest | gzip > codex-playground.tar.gz

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "codex-playground.tar.gz"
          target: "/home/ubuntu/codex-playground"

      - name: Deploy via SSH with docker-compose embedded
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            cd /home/ubuntu/codex-playground

            # Install Docker and Compose if missing
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt update
              sudo apt install -y docker.io docker-compose
            fi

            # Recreate docker-compose.yml from CI
            cat <<EOF > docker-compose.yml
            version: '3.8'
            services:
              codex:
                image: codex-playground:latest
                container_name: codex-playground
                ports:
                  - "80:80"
                restart: unless-stopped
            EOF

            # Load Docker image
            gunzip -c codex-playground.tar.gz | sudo docker load

            # Bring up the container
            sudo docker-compose up -d
